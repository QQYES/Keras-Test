# coding:utf-8import datetime# 输入参数，下次值班日期，统计时只参考该日期一个月以内的值班情况next_duty_date = "20171123"# 值班任务次数权重，按类型weight_duty_times = {'通宵': 1, '重保': 0.2, '晚上加班': 0.1}# 值班任务时间初始权重， 每过去一天，减掉coeff_dateweight_duty_date = {'通宵': 1, '重保': 0.5, '晚上加班': 0.2}coeff_date = 0.2duty_result = {}  # 记录每人值班强度评估结果duty_times = {}  # 记录每人值班次数# 解析每次值班，计算权重和次数def fill_into_dutyinfo(duty_name, duty_type, duty_date):    d1 = datetime.datetime.strptime(duty_date, '%Y%m%d')    d2 = datetime.datetime.strptime(next_duty_date, '%Y%m%d')    diff_days = abs((d2 - d1).days)    if (diff_days > 30):        return    date_level = weight_duty_date[duty_type] - diff_days * coeff_date    date_level = 0 if date_level < 0 else date_level    times_level = weight_duty_times[duty_type]    level = date_level + times_level    print(duty_name, duty_type, duty_date, date_level, times_level)    if duty_name in duty_result.keys():        level += duty_result[duty_name]    duty_result[duty_name] = level    times = 1    if duty_name + duty_type in duty_times.keys():        times += duty_times[duty_name + duty_type]    duty_times[duty_name + duty_type] = times# 读入值班记录file = open("onduty.csv", encoding="utf-8")print("每次值班权重：")while 1:    line = file.readline()    if not line:        break    fields = line.split(",")    if (len(fields) < 4):        pass    duty_name = fields[0]    duty_type = fields[1]    duty_date = fields[2]    fill_into_dutyinfo(duty_name, duty_type, duty_date)print("\n每人值班任务强度：")print(sorted(duty_result.items(), key=lambda item: item[1]))print("\n每人值班任务次数：")print(sorted(duty_times.items(), key=lambda item: item[0]))# print(sorted(duty_times.items(), key=lambda item: item[1], reverse=True))